{
  "compilerOptions": {
    /* -------------------- Basic Options */
    "target": "ESNEXT", /*                    Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "ESNext", /*                    Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "sourceMap": true, /*                     Generates corresponding '.map' file. */
    "outDir": "build",                         /* Redirect output structure to the directory. */
    "removeComments": false, /*               Do not emit comments to output. */
    "strict": false, /*                       Enable all strict type-checking options. */
    "noImplicitAny": true, /*                 Raise error on expressions and declarations with an implied 'any' type. */
    "strictFunctionTypes": true, /*           Enable strict checking of function types. */
    "noImplicitThis": true, /*                Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true, /*                  Parse in strict mode and emit "use strict" for each source file. */
    "noUnusedLocals": true, /*                Report errors on unused locals. */
    "noUnusedParameters": true, /*            Report errors on unused parameters. */
    "noImplicitReturns": true, /*             Report error when not all code paths in function return a value. */
    "moduleResolution": "node", /*            Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "esModuleInterop": true,                /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    "skipLibCheck": true,
    "paths": {
      "jsm/*": ["./node_modules/three/examples/jsm/*"],
      "jsm/libs/dat.gui.module": ["./node_modules/@types/dat.gui"]
    }
  }
}